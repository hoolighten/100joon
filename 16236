import sys
from collections import deque


def shark_eat(nx, ny, graph, size, hungry):
    queue = deque([nx],[ny])
    _time = 0
    dx = [0, -1, 0, 1]
    dy = [-1, 0, 1, 0]
    while queue:
        nx, ny = queue.popleft()
        _time += 1
        for k in range(4):
            nx = nx + dx[k]
            ny = ny + dy[k]
            if 0 <= nx < n and 0 < ny <= n and input_graph[nx][ny] <= shark_size:
                input_graph[nx][ny] = shark_size
                print("go")
                if input_graph[nx][ny] < size and input_graph[nx][ny] != 0:
                    hungry += 1
                    print("eat")
    return shark_eat(nx, ny, graph)



n = int(input())
input_graph = []
shark_size = 2
shark_hungry = 0
times = 0
for _ in range(n):
    input_graph.append(list(map(int, input().split())))
for i in range(n):
    for j in range(n):
        if input_graph[i][j] == 9:
            shark_x = i
            shark_y = j



